{"version":3,"sources":["components/Form.jsx","actions/index.js","components/WeatherCard.jsx","components/ToggleTheme.jsx","App.jsx","reducers/updatePlace.js","reducers/updatePlaceData.js","reducers/themeReducer.js","reducers/index.js","store.js","index.js"],"names":["Form","place","useSelector","state","theme","dispatch","useDispatch","className","type","value","onChange","e","payload","updatePlace","target","onClick","fetch","then","res","json","data","updatePlaceData","WeatherCard","placeData","location","src","current","condition","icon","alt","temp_c","text","name","gust_kph","humidity","precip_mm","ToggleTheme","App","action","themeReducer","console","log","rootReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e9931f6.chunk.js","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { updatePlace, updatePlaceData } from \"../actions/index\";\r\n\r\nconst Form = () => {\r\n  const place = useSelector((state) => state.place);\r\n  const theme = useSelector((state) => state.theme);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 form\">\r\n          <input\r\n            type=\"text\"\r\n            value={place}\r\n            onChange={(e) => dispatch(updatePlace(e.target.value))}\r\n          />\r\n          <button\r\n            className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\r\n            onClick={() => dispatch(updatePlaceData(place))}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Form;\r\n","const updatePlace = (place) => {\r\n  return {\r\n    type: \"UPDATE_PLACE\",\r\n    payload: place,\r\n  };\r\n};\r\n\r\nconst updatePlaceData = (place) => {\r\n  return (dispatch) => {\r\n    fetch(\r\n      `http://api.weatherapi.com/v1/current.json?key=66e4ea1c6f3c46efba9122738210608&q=${place}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        return dispatch({ type: \"UPDATE_PLACE_DATA\", payload: data });\r\n      });\r\n  };\r\n};\r\n\r\nconst toggleTheme = () => {\r\n  return {\r\n    type: \"TOGGLE_THEME\",\r\n  };\r\n};\r\n\r\nexport { updatePlace, updatePlaceData, toggleTheme };\r\n","import { useSelector } from \"react-redux\";\r\n\r\nconst WeatherCard = () => {\r\n  const placeData = useSelector((state) => state.placeData);\r\n  const theme = useSelector((state) => state.theme);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"offset-md-4 col-12 col-md-4 weather\">\r\n          <div className={theme ? \"card dark\" : \"card\"}>\r\n            {placeData.location ? (\r\n              <div>\r\n                <img src={placeData.current.condition.icon} alt=\"\" />\r\n                <div className=\"temp\">{placeData.current.temp_c}Â°</div>\r\n                <div className=\"desc\">{placeData.current.condition.text}</div>\r\n                <div className=\"place\">{placeData.location.name}</div>\r\n                <div className=\"container\">\r\n                  <div className=\"row whp\">\r\n                    <div className=\"col\">\r\n                      <div className=\"title\">Wind Now</div>\r\n                      <div className=\"data\">\r\n                        {placeData.current.gust_kph}\r\n                        <span className=\"unit\">KM</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"title\">Humidity</div>\r\n                      <div className=\"data\">\r\n                        {placeData.current.humidity}\r\n                        <span className=\"unit\">%</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <div className=\"title\">Precipitation</div>\r\n                      <div className=\"data\">\r\n                        {placeData.current.precip_mm}\r\n                        <span className=\"unit\">MM</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <h2>Place not found</h2>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { toggleTheme } from \"../actions/index\";\r\n\r\nconst ToggleTheme = () => {\r\n  const theme = useSelector((state) => state.theme);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"toggle-theme\">\r\n      <button\r\n        className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\r\n        onClick={() => dispatch(toggleTheme())}\r\n      >\r\n        {theme ? \"Dark\" : \"Light\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default ToggleTheme;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport ToggleTheme from \"./components/ToggleTheme\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const theme = useSelector((state) => state.theme);\n  return (\n    <div className={theme ? \"App Dark\" : \"App\"}>\n      <ToggleTheme />\n      <Form />\n      <WeatherCard />\n    </div>\n  );\n}\n\nexport default App;\n","const updatePlace = (state = \"\", action) => {\r\n  if (action.type === \"UPDATE_PLACE\") return action.payload;\r\n  return state;\r\n};\r\nexport default updatePlace;\r\n","const updatePlaceData = (state = {}, action) => {\r\n  if (action.type === \"UPDATE_PLACE_DATA\") return action.payload;\r\n  return state;\r\n};\r\nexport default updatePlaceData;\r\n","const themeReducer = (state = false, action) => {\r\n  console.log(\"THEME REDUCER\");\r\n  if (action.type === \"TOGGLE_THEME\") {\r\n    return !state;\r\n  }\r\n  return state;\r\n};\r\nexport default themeReducer;\r\n","import updatePlace from \"./updatePlace\";\r\nimport updatePlaceData from \"./updatePlaceData\";\r\nimport themeReducer from \"./themeReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducers = combineReducers({\r\n  place: updatePlace,\r\n  placeData: updatePlaceData,\r\n  theme: themeReducer,\r\n});\r\nexport default rootReducers;\r\n","import thunk from \"redux-thunk\";\r\nimport rootReducers from \"./reducers\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk));\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}